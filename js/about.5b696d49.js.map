{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_string-at.js","webpack:///./node_modules/core-js/modules/_advance-string-index.js","webpack:///./src/views/TransForm.vue?048c","webpack:///src/views/TransForm.vue","webpack:///./src/views/TransForm.vue?c7af","webpack:///./src/views/TransForm.vue","webpack:///./node_modules/core-js/modules/_flags.js","webpack:///./node_modules/core-js/modules/_fix-re-wks.js","webpack:///./node_modules/core-js/modules/es6.regexp.split.js","webpack:///./node_modules/core-js/modules/_regexp-exec.js","webpack:///./node_modules/core-js/modules/_regexp-exec-abstract.js","webpack:///./node_modules/core-js/modules/_is-regexp.js","webpack:///./node_modules/core-js/modules/web.dom.iterable.js","webpack:///./node_modules/core-js/modules/es6.regexp.exec.js"],"names":["toInteger","__webpack_require__","defined","module","exports","TO_STRING","that","pos","a","b","s","String","i","l","length","undefined","charCodeAt","charAt","slice","at","S","index","unicode","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","type","justify","span","rows","placeholder","model","value","callback","$$v","currentInput","expression","staticStyle","margin","on","click","trans","_v","staticRenderFns","TransFormvue_type_script_lang_js_","name","data","input","methods","indexOf","list","split","result","forEach","item","views_TransFormvue_type_script_lang_js_","component","Object","componentNormalizer","options","__file","__webpack_exports__","anObject","global","ignoreCase","multiline","sticky","redefine","hide","fails","wks","regexpExec","SPECIES","REPLACE_SUPPORTS_NAMED_GROUPS","re","exec","groups","replace","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","apply","arguments","KEY","SYMBOL","DELEGATES_TO_SYMBOL","O","DELEGATES_TO_EXEC","execCalled","constructor","nativeRegExpMethod","fns","nativeMethod","regexp","str","arg2","forceStringMethod","done","call","strfn","rxfn","prototype","RegExp","string","arg","isRegExp","speciesConstructor","advanceStringIndex","toLength","callRegExpExec","$min","Math","min","$push","push","$SPLIT","LENGTH","LAST_INDEX","SUPPORTS_Y","e","SPLIT","$split","maybeCallNative","internalSplit","separator","limit","match","lastIndex","lastLength","output","flags","lastLastIndex","splitLimit","separatorCopy","source","test","splitter","res","rx","C","unicodeMatching","lim","p","q","A","z","regexpFlags","nativeExec","nativeReplace","patchedExec","UPDATES_LAST_INDEX_WRONG","re1","re2","NPCG_INCLUDED","PATCH","reCopy","classof","builtinExec","R","TypeError","isObject","cof","MATCH","it","$iterators","getKeys","Iterators","ITERATOR","TO_STRING_TAG","ArrayValues","Array","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","key","NAME","explicit","Collection","proto","target","forced"],"mappings":"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","file":"js/about.5b696d49.js","sourcesContent":["var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","'use strict';\nvar at = require('./_string-at')(true);\n\n // `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? at(S, index).length : 1);\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"trans-form\"},[_c('el-row',{staticClass:\"row-bg\",attrs:{\"type\":\"flex\",\"justify\":\"center\"}},[_c('el-col',{attrs:{\"span\":6}},[_c('div',{staticClass:\"grid-content bg-purple\"})]),_c('el-col',{attrs:{\"span\":6}},[_c('div',{staticClass:\"grid-content bg-purple-light\"},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":10,\"placeholder\":\"Pleas Input Something\"},model:{value:(_vm.currentInput),callback:function ($$v) {_vm.currentInput=$$v},expression:\"currentInput\"}})],1)]),_c('el-col',{attrs:{\"span\":6}},[_c('div',{staticClass:\"grid-content bg-purple\"})])],1),_c('div',{staticStyle:{\"margin\":\"20px 0\"}}),_c('el-row',{staticClass:\"row-bg\",attrs:{\"type\":\"flex\",\"justify\":\"center\"}},[_c('el-col',{attrs:{\"span\":6}},[_c('div',{staticClass:\"grid-content bg-purple\"})]),_c('el-col',{attrs:{\"span\":6}},[_c('div',{staticClass:\"grid-content bg-purple-light\"},[_c('el-button',{on:{\"click\":_vm.trans}},[_vm._v(\"Trans\")])],1)]),_c('el-col',{attrs:{\"span\":6}},[_c('div',{staticClass:\"grid-content bg-purple\"})])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"trans-form\">\n        <el-row type=\"flex\" class=\"row-bg\" justify=\"center\">\n            <el-col :span=\"6\">\n                <div class=\"grid-content bg-purple\"></div>\n            </el-col>\n            <el-col :span=\"6\">\n                <div class=\"grid-content bg-purple-light\">\n                    <el-input\n                            type=\"textarea\"\n                            :rows=\"10\"\n                            placeholder=\"Pleas Input Something\"\n                            v-model=\"currentInput\"\n                    >\n                    </el-input>\n                </div>\n            </el-col>\n            <el-col :span=\"6\">\n                <div class=\"grid-content bg-purple\"></div>\n            </el-col>\n        </el-row>\n        <div style=\"margin: 20px 0;\"></div>\n        <el-row type=\"flex\" class=\"row-bg\" justify=\"center\">\n            <el-col :span=\"6\">\n                <div class=\"grid-content bg-purple\"></div>\n            </el-col>\n            <el-col :span=\"6\">\n                <div class=\"grid-content bg-purple-light\">\n                    <el-button @click=\"trans\">Trans</el-button>\n                </div>\n            </el-col>\n            <el-col :span=\"6\">\n                <div class=\"grid-content bg-purple\"></div>\n            </el-col>\n        </el-row>\n    </div>\n</template>\n<script>\n    export default {\n        name: 'trans-form',\n        data() {\n            return {\n                currentInput: this.input\n            }\n        },\n        methods: {\n            trans() {\n                if(!this.currentInput.indexOf(\"[\") &&\n                    !this.currentInput.indexOf(\"]\")){\n                    return false\n                }\n\n                let list = this.currentInput.split('\\n');\n                let result = '[\\n';\n                list.forEach(function(item){\n                    result += '\\''+item+'\\',\\n';\n                });\n                result += '];';\n                this.currentInput = result;\n            }\n        }\n    }\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TransForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TransForm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TransForm.vue?vue&type=template&id=3dc487e6&\"\nimport script from \"./TransForm.vue?vue&type=script&lang=js&\"\nexport * from \"./TransForm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"TransForm.vue\"\nexport default component.exports","'use strict';\n// 21.2.5.3 get RegExp.prototype.flags\nvar anObject = require('./_an-object');\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","'use strict';\nrequire('./es6.regexp.exec');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar wks = require('./_wks');\nvar regexpExec = require('./_regexp-exec');\n\nvar SPECIES = wks('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {\n  // Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length === 2 && result[0] === 'a' && result[1] === 'b';\n})();\n\nmodule.exports = function (KEY, length, exec) {\n  var SYMBOL = wks(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n    re.exec = function () { execCalled = true; return null; };\n    if (KEY === 'split') {\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n    }\n    re[SYMBOL]('');\n    return !execCalled;\n  }) : undefined;\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var fns = exec(\n      defined,\n      SYMBOL,\n      ''[KEY],\n      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {\n        if (regexp.exec === regexpExec) {\n          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n            // The native String method already delegates to @@method (this\n            // polyfilled function), leasing to infinite recursion.\n            // We avoid it by directly calling the native @@method method.\n            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n          }\n          return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n        }\n        return { done: false };\n      }\n    );\n    var strfn = fns[0];\n    var rxfn = fns[1];\n\n    redefine(String.prototype, KEY, strfn);\n    hide(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return rxfn.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return rxfn.call(string, this); }\n    );\n  }\n};\n","'use strict';\n\nvar isRegExp = require('./_is-regexp');\nvar anObject = require('./_an-object');\nvar speciesConstructor = require('./_species-constructor');\nvar advanceStringIndex = require('./_advance-string-index');\nvar toLength = require('./_to-length');\nvar callRegExpExec = require('./_regexp-exec-abstract');\nvar regexpExec = require('./_regexp-exec');\nvar $min = Math.min;\nvar $push = [].push;\nvar $SPLIT = 'split';\nvar LENGTH = 'length';\nvar LAST_INDEX = 'lastIndex';\n\n// eslint-disable-next-line no-empty\nvar SUPPORTS_Y = !!(function () { try { return new RegExp('x', 'y'); } catch (e) {} })();\n\n// @@split logic\nrequire('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(this);\n      if (separator === undefined && limit === 0) return [];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) return $split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy[LAST_INDEX];\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if (output[LENGTH] >= splitLimit) break;\n        }\n        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string[LENGTH]) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);\n    };\n  } else {\n    internalSplit = $split;\n  }\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = defined(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                    (rx.multiline ? 'm' : '') +\n                    (rx.unicode ? 'u' : '') +\n                    (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? 0xffffffff : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n});\n","'use strict';\n\nvar regexpFlags = require('./_flags');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar LAST_INDEX = 'lastIndex';\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/,\n      re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;\n})();\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];\n\n    match = nativeExec.call(re, str);\n\n    if (UPDATES_LAST_INDEX_WRONG && match) {\n      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      // eslint-disable-next-line no-loop-func\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","'use strict';\n\nvar classof = require('./_classof');\nvar builtinExec = RegExp.prototype.exec;\n\n // `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw new TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n  if (classof(R) !== 'RegExp') {\n    throw new TypeError('RegExp#exec called on incompatible receiver');\n  }\n  return builtinExec.call(R, S);\n};\n","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","'use strict';\nvar regexpExec = require('./_regexp-exec');\nrequire('./_export')({\n  target: 'RegExp',\n  proto: true,\n  forced: regexpExec !== /./.exec\n}, {\n  exec: regexpExec\n});\n"],"sourceRoot":""}